openapi: 3.0.0

info:
  title: Nomics API
  version: 1.0.0
  description: |
    Welcome to the Nomics API. Early access is currently underway. If you're interested in
    our API please [contact us](https://p.nomics.com/contact/).

    [nomics.com](https://nomics.com) is built entirely with the Nomics API. Everything
    we've done on [nomics.com](https://nomics.com) you can do with our API. There are
    no internal api endpoints.

    # Errors

    The Nomics API uses standard HTTP status codes to indicate success or failure. 200
    represents success, 4xx represents a user error (such as a problem with your key),
    and 5xx represents a problem with our API.

    # Versioning

    We follow Semantic Versioning. That means our API is versioned as Major.Minor.Patch.
    For example, Version 1.2.3 has major version 1, minor version 2, and patch version 3.
    
    Major version changes indicate that we have altered
    the API significantly and it is no longer compatible with a previous version. Major
    versions are also used as the API url prefix.

    When we update the major version, we will not remove the previous version without notice
    to API customers and a deprecation period to allow everyone to smoothly update to the new
    version.

    Minor version changes indicate that we have added new functionality without breaking
    any existing functionality. An API client is compatible with future minor versions. Note
    that a minor version update may add a new field to an existing API endpoint's response. Your
    API client must ignore fields it does not understand in order to be compatible with future
    minor versions.

    Patch version changes indicate we fixed a bug or security vulnerability. Patch versions
    don't add new functionality.

    # JSON and CSV Support

    By default, all endpoints serve data as JSON. However, by passing `format=csv` in the URL,
    an endpoint will return CSV data. This can be used in Google Sheets via the `IMPORTDATA`
    function.

    CSV responses will not contain a header row, this is so that data can be easily concatenated
    from multiple requests. The fields will be rendered in the same order as the JSON fields. See
    the endpoint's documentation for an example.

    # Cross Origin Resource Sharing (CORS)

    This API supports Cross Origin Resource Sharing, which allows you to make API requests directly
    from your user's browser.

    To use CORS, you must provide Nomics with the domains on which your application will run so that
    we can whitelist them for CORS access.

    Requests from `localhost`, `127.0.0.1`, and `0.0.0.0` will always succeed to aid in development.

servers:
  - url: https://api.nomics.com/v1
    description: API Server

paths:
  /markets:
    get:
      summary: Markets
      description: |
        The markets endpoint returns information on the exchanges and markets that Nomics supports,
        in addition to the Nomics currency identifiers for the base and quote currency.
      responses:
        '200':
          description: A list of markets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Market'
            text/csv:
              schema:
                type: string
              example: "bitfinex,avtbtc,AVT,BTC"
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /prices:
    get:
      summary: Prices
      description: |
        The prices endpoint returns current prices for all currencies. Prices are updated every 10 seconds.
      responses:
        '200':
          description: A list of currencies with their price
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Price'
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /candles:
    get:
      summary: Candles
      description: |
        The candles endpoint returns aggregated open, high, low, close, and volume information for Nomics currencies.
        When asking for candles, a currency is provided as a parameter. Nomics aggregates all markets where the given
        currency is the base currency and the quote currency is a fiat currency, BTC, or ETH and returns all values in
        USD.

        Candles are aggregated across all markets for the base currencies, which necessitates converting to a common
        quote currency. Nomics converts all markets into USD in order to aggregated candles.

        Candles have the following history based on size:

        * `1d`: Inception
        * `1h`: 30 days
      parameters:
        - $ref: '#/components/parameters/candle-interval'
        - $ref: '#/components/parameters/currency'
      responses:
        '200':
          description: A list of candles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Candle"
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /exchange_candles:
    get:
      summary: Exchange Candles
      description: |
        The exchange candles endpoint returns raw open, close, high, low, and volume information for Nomics Markets.
        The data is not aggregated, therefore prices are in the quote currency of the market and volume is in the base
        currency of the market.
        
        Candles have the following history based on size:

        * `1d`: Inception
        * `1h`: 30 days
        * `30m`: 14 days
        * `5m`: 3 days
        * `1m`: 24 hours
      parameters:
        - $ref: '#/components/parameters/exchange-candle-interval'
        - $ref: '#/components/parameters/exchange'
        - $ref: '#/components/parameters/market'
      responses:
        '200':
          description: A list of candles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Candle"
        '401':
           $ref: '#/components/responses/UnauthorizedError'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: |
        You can use HTTP basic authentication to access the Nomics API.
        Set the `user` to your API Key, and leave the `password` blank.
    apiKeyAuth:
      type: apiKey
      in: query
      name: key
      description: |
        You can include your API Key as the parameter `key` in any request.
  schemas:
    Market:
      type: object
      properties:
        exchange:
          type: string
          description: Nomics Exchange ID
        market:
          type: string
          description: The Exchange's Market ID (usable on Exchange's API)
        base:
          type: string
          description: Nomics Currency ID of the asset being traded
        quote:
          type: string
          description: Nomics Currency ID of the asset used to quote a price
      example:
        exchange: bitfinex
        market: avtbtc
        base: AVT
        quote: BTC
    Price:
      type: object
      properties:
        currency:
          type: string
          description: Currency ID
        price:
          type: string
          description: Price in quote currency
      example:
        currency: BTC
        price: "10000.00000"
    Candle:
      type: object
      properties:
        timestamp:
          type: string
          description: Start time of the candle
        low:
          type: string
          description: Lowest price in quote currency
        open:
          type: string
          description: First trade price in quote currency
        close:
          type: string
          description: Last trade price in quote currency
        high:
          type: string
          description: Highest price in quote currency
        volume:
          type: string
          description: Volume in base currency
      example:
        timestamp: "2018-03-19T10:00:00Z"
        low: "7024.32225"
        open: "8276.19407"
        close: "8281.17307"
        high: "8566.43000"
        volume: "59624801"
  parameters:
    candle-interval:
      name: interval
      in: query
      description: Time interval of the candle
      required: true
      schema:
        type: string
        enum:
          - 1d
          - 1h
    exchange-candle-interval:
      name: interval
      in: query
      description: Time interval of the candle
      required: true
      schema:
        type: string
        enum:
          - 1d
          - 1h
          - 30m
          - 5m
          - 1m
    currency:
      name: currency
      in: query
      description: Currency ID
      required: true
      schema:
        type: string
      example: BTC
    exchange:
      name: exchange
      in: query
      description: Exchange ID
      required: true
      schema:
        type: string
      example: bitfinex
    market:
      name: market
      in: query
      description: Market ID
      required: true
      schema:
        type: string
      example: avtbtc
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid

security:
  - basicAuth: []
  - apiKeyAuth: []
