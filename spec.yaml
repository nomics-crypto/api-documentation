openapi: 3.0.0

info:
  title: Nomics Cryptocurrency & Bitcoin API
  version: 1.0.0
  description: |
    # Introduction

    Welcome to the Nomics Cryptocurrency & Bitcoin API. To sign up for an API key please [go here](https://p.nomics.com/cryptocurrency-bitcoin-api/).

    [nomics.com](https://nomics.com) is built entirely with the Nomics API. Everything
    we've done on [nomics.com](https://nomics.com) you can do with our API. There are
    no internal API endpoints.

    # API Server URL

    The Nomics API runs at `https://api.nomics.com/v1`. All requests should be prefixed
    by the server URL.

    # Errors

    The Nomics API uses standard HTTP status codes to indicate success or failure. 200
    represents success, 4xx represents a user error (such as a problem with your key),
    and 5xx represents a problem with our API.

    # Versioning

    We follow Semantic Versioning. That means our API is versioned as Major.Minor.Patch.
    For example, Version 1.2.3 has major version 1, minor version 2, and patch version 3.
    
    Major version changes indicate that we have altered
    the API significantly and it is no longer compatible with a previous version. Major
    versions are also used as the API URL prefix.

    When we update the major version, we will not remove the previous version without notice
    to API customers and a deprecation period to allow everyone to smoothly update to the new
    version.

    Minor version changes indicate that we have added new functionality without breaking
    any existing functionality. An API client is compatible with future minor versions. Note
    that a minor version update may add a new field to an existing API endpoint's response. Your
    API client must ignore fields it does not understand in order to be compatible with future
    minor versions.

    Patch version changes indicate we fixed a bug or security vulnerability. Patch versions
    don't add new functionality.

    # JSON and CSV Support

    By default, all endpoints serve data as JSON. However, by passing `format=csv` in the URL,
    an endpoint will return CSV data. This can be used in Google Sheets via the `IMPORTDATA`
    function.

    CSV responses will not contain a header row, this is so that data can be easily concatenated
    from multiple requests. The fields will be rendered in the same order as the JSON fields. See
    the endpoint's documentation for an example.

    # Cross Origin Resource Sharing (CORS)

    This API supports Cross Origin Resource Sharing, which allows you to make API requests directly
    from your user's browser.

    To use CORS, you must provide Nomics with the domains on which your application will run so that
    we can whitelist them for CORS access.

    Requests from `localhost`, `127.0.0.1`, and `0.0.0.0` will always succeed to aid in development.

servers:
  - url: https://api.nomics.com/v1
    description: API Server

paths:
  /markets:
    get:
      summary: Markets
      operationId: getMarkets
      description: |
        The markets endpoint returns information on the exchanges and markets that Nomics supports,
        in addition to the Nomics currency identifiers for the base and quote currency.
      responses:
        '200':
          description: A list of markets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Market'
            text/csv:
              schema:
                type: string
              example: "bitfinex,avtbtc,AVT,BTC"
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /markets/interval:
    get:
      summary: Market Interval
      operationId: getMarketInterval
      description: |
        The market interval endpoint returns a summary of information about all markets based in a given currency over
        a configurable time interval.
      parameters:
        - name: currency
          in: query
          description: Nomics Currency ID to query information for
          required: true
          schema:
            type: string
        - name: hours
          in: query
          description: Number of hours back to calculate data
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 8760
            default: 1
        - name: start
          in: query
          description: |
            Start time of the interval in RFC3339 (URI escaped). If not provided, it is computed using the
            hours parameter.
          required: false
          schema:
            type: string
          example: "2018-05-14T00%3A00%3A00Z"
        - $ref: '#/components/parameters/interval-end'
      responses:
        '200':
          description: A list of markets with price and volume information for a currency
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MarketInterval'
            text/csv:
              schema:
                type: string
              example: "bitfinex,EUR,5107055.26765,9484.34395,05/03/2018 15:00:00,9671.60953,05/03/2018 20:31:24"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /markets/prices:
    get:
      summary: Market Prices
      operationId: getMarketPrices
      description: |
        The market prices endpoint returns prices in USD for the last trade in each market with the given base
        currency.
      parameters:
        - name: currency
          in: query
          description: Nomics Currency ID of the desired base currency
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of markets with their price
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    exchange:
                      type: string
                      description: Nomics ID of the exchange
                    quote:
                      type: string
                      description: Nomics ID of the quote currency
                    price:
                      type: string
                      description: Price in USD of the most recent trade
                    timestamp:
                      type: string
                      description: RFC3339 Timestamp of the most recent trade
                  example:
                    exchange: "bitfinex"
                    quote: "USD"
                    price: "7419.69255"
                    timestamp: "2018-06-05T13:23:18.345Z"
            text/csv:
              schema:
                type: string
              example: "bitfinex,USD,7419.69255,06/05/2018 13:23:18"
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /exchange-markets/interval:
    get:
      summary: Exchange Market Interval
      operationId: getExchangeMarketInterval
      description: |
        The exchange market interval endpoint returns a summary of information about all markets for a given currency
        over a configurable time interval in their native values.
      parameters:
        - name: currency
          in: query
          description: Nomics Currency ID to query information for
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: Start time of the interval in RFC3339 (URI escaped).
          required: true
          schema:
            type: string
          example: "2018-05-14T00%3A00%3A00Z"
        - $ref: '#/components/parameters/interval-end'
      responses:
        '200':
          description: A list of markets with price and volume information for a currency
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    exchange:
                      type: string
                      description: Nomics Exchange ID
                    base:
                      type: string
                      description: Nomics Currency ID of the asset being traded
                    quote:
                      type: string
                      description: Nomics Currency ID of the asset used to quote a price
                    volume_base:
                      type: string
                      description: Total volume in the base currency
                    open_quote:
                      type: string
                      description: Open price in the quote currency
                    open_timestamp:
                      type: string
                      description: Timestamp of the open price in RFC 3339
                    close_quote:
                      type: string
                      description: Close price in the quote currency
                    close_timestamp:
                      type: string
                      description: Timestamp of the close price in RFC 3339
                  example:
                    exchange: "binance"
                    base: "ADA"
                    quote: "BTC"
                    volume_base: "105451372.00000000"
                    open_quote: "0.00002228"
                    open_timestamp: "2018-06-24T00:00:00Z"
                    close_quote: "0.00002187"
                    close_timestamp: "2018-06-25T14:00:00Z"
            text/csv:
              schema:
                type: string
              example: "binance,ADA,BTC,106633034.00000000,0.00002228,06/24/2018 00:00:00,0.00002177,06/25/2018 15:00:00"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /exchange-markets/prices:
    get:
      summary: Exchange Market Prices
      operationId: getExchangeMarketPrices
      description: |
        The exchange market prices endpoint returns prices for the last trade in each market with the given currency
        as either the base or quote currency in their native values.
      parameters:
        - name: currency
          in: query
          description: Nomics Currency ID of the desired currency
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of markets with their prices
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    exchange:
                      type: string
                      description: Nomics ID of the exchange
                    base:
                      type: string
                      description: Nomics ID of the base currency
                    quote:
                      type: string
                      description: Nomics ID of the quote currency
                    price_quote:
                      type: string
                      description: Price in the quote currency of the most recent trade
                    timestamp:
                      type: string
                      description: RFC3339 Timestamp of the most recent trade
                  example:
                    exchange: "binance"
                    base: "ADA"
                    quote: "BTC"
                    price_quote: "0.00002183"
                    timestamp: "2018-06-25T15:13:21.304Z"
            text/csv:
              schema:
                type: string
              example: "binance,ADA,BTC,0.00002181,06/25/2018 15:17:06"
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /prices:
    get:
      summary: Prices
      operationId: getPrices
      description: |
        The prices endpoint returns current prices for all currencies. Prices are updated every 10 seconds.
      responses:
        '200':
          description: A list of currencies with their price
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Price'
            text/csv:
              schema:
                type: string
              example: "BTC,10000.00000"
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /candles:
    get:
      summary: Candles
      operationId: getCandles
      description: |
        The candles endpoint returns aggregated open, high, low, close, and volume information for Nomics currencies.
        When asking for candles, a currency is provided as a parameter. Nomics aggregates all markets where the given
        currency is the base currency and the quote currency is a fiat currency, BTC, or ETH and returns all values in
        USD.

        Candles are aggregated across all markets for the base currencies, which necessitates converting to a common
        quote currency. Nomics converts all markets into USD in order to aggregated candles.

        Candles have the following history based on size:

        * `1d`: Inception
        * `1h`: 30 days
      parameters:
        - $ref: '#/components/parameters/candle-interval'
        - $ref: '#/components/parameters/currency'
        - interval-start:
          name: start
          in: query
          description: Start time of the interval in RFC3339 (URI escaped). If not provided, starts from first candle.
          required: false
          schema:
            type: string
          example: "2018-05-14T00%3A00%3A00Z"
        - $ref: '#/components/parameters/interval-end'
      responses:
        '200':
          description: A list of candles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Candle"
            text/csv:
              schema:
                type: string
              example: "2018-03-19T10:00:00Z,7024.32225,8276.19407,8281.17307,8566.43000,59624801"
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /exchange_candles:
    get:
      summary: Exchange Candles
      operationId: getExchangeCandles
      description: |
        The exchange candles endpoint returns raw open, close, high, low, and volume information for Nomics Markets.
        The data is not aggregated, therefore prices are in the quote currency of the market and volume is in the base
        currency of the market.
        
        Candles have the following history based on size:

        * `1d`: Inception
        * `1h`: 30 days
        * `30m`: 14 days
        * `5m`: 3 days
        * `1m`: 24 hours
      parameters:
        - $ref: '#/components/parameters/exchange-candle-interval'
        - $ref: '#/components/parameters/exchange'
        - $ref: '#/components/parameters/market'
      responses:
        '200':
          description: A list of candles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Candle"
            text/csv:
              schema:
                type: string
              example: "2018-03-19T10:00:00Z,7024.32225,8276.19407,8281.17307,8566.43000,59624801"
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /dashboard:
    get:
      summary: Dashboard
      operationId: getDashboard
      description: |
        The dashboard endpoint is a high level view of the current state of the market. It contains a wide
        variety of information and is updated every 10 seconds.
      responses:
        '200':
          description: A list of currency summaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Dashboard"
            text/csv:
              schema:
                type: string
              example: "BTC,7436.82313,1017039454.62165,1013499101.75834,7123.20591,7856259697.70049,7139283718.53940,10769.08245,41483988434.15605,50120582053.23234,1144.85801,385101925394.80138,16773015388.14144,6888.45685,24436.29525,2018-01-05T00:00:00Z,bithumb,KRW,16957550.0,21000000.0"
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /sparkline:
    get:
      summary: Sparkline
      operationId: getSparkline
      description: |
        The sparkline endpoint is a high level view of currency performance over a variety of intervals.
      responses:
        '200':
          description: Currency performance over time for all currencies over day, week, month, and year periods.
          content:
            application/json:
              schema:
                type: object
                properties:
                  day:
                    type: array
                    description: Currency performance over the past 24 hours
                    items:
                      $ref: "#/components/schemas/SparklineRow"
                  week:
                    type: array
                    description: Currency performance over the past 7 days
                    items:
                      $ref: "#/components/schemas/SparklineRow"
                  month:
                    type: array
                    description: Currency performance over the past 30 days
                    items:
                      $ref: "#/components/schemas/SparklineRow"
                  year:
                    type: array
                    description: Currency performance over the past 365 days
                    items:
                      $ref: "#/components/schemas/SparklineRow"
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /market-cap/sparkline:
    get:
      summary: Market Cap Sparkline
      operationId: getMarketCapSparkline
      description: |
        The Market Cap Sparkline is a high level history of the market cap for all assets.
      responses:
        '200':
          description: Performance over time for the entire market over day, week, month, and year periods.
          content:
            application/json:
              schema:
                type: object
                properties:
                  day:
                    type: array
                    description: Market performance over the past 24 hours
                    items:
                      $ref: "#/components/schemas/MarketCapSparklineRow"
                  week:
                    type: array
                    description: Market performance over the past 7 days
                    items:
                      $ref: "#/components/schemas/MarketCapSparklineRow"
                  month:
                    type: array
                    description: Market performance over the past 30 days
                    items:
                      $ref: "#/components/schemas/MarketCapSparklineRow"
                  year:
                    type: array
                    description: Market performance over the past 365 days
                    items:
                      $ref: "#/components/schemas/MarketCapSparklineRow"
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /exchange-rates:
    get:
      summary: Exchange Rates
      operationId: getExchangeRates
      description: |
        The exchange rates endpoint returns the current exchange rates used by Nomics to convert prices from markets
        into USD. This contains Fiat currencies as well as a BTC and ETH quote prices. This endpoint helps normalize
        data across markets as well as to provide localization for users.

        Currently, this endpoint does not support historical data, but this feature is planned.
      responses:
        '200':
          description: List of exchange rates into USD
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExchangeRate"
            text/csv:
              schema:
                type: string
              example: "AUD,0.76953,2018-04-04T00:00:00Z"
                
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /exchange-rates/interval:
    get:
      summary: Exchange Rates Interval
      operationId: getExchangeRatesInterval
      description: |
        Exchange rates to convert from USD over a time interval. This endpoint can be used with other interval endpoints
        to convert values into a desired quote currency.
      parameters:
        - $ref: '#/components/parameters/interval-start'
        - $ref: '#/components/parameters/interval-end'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    currency:
                      type: string
                      description: Nomics ID of the currency
                    open:
                      type: string
                      description: Open rate of exchange
                    open_timestamp:
                      type: string
                      description: RFC3999 timestamp of the open rate
                    close:
                      type: string
                      description: Close rate of exchange
                    close_timestamp:
                      type: string
                      description: RFC3999 timestamp of the open rate
                  example:
                    currency: "EUR"
                    open: "1.1934028689404969"
                    open_timestamp: "2018-05-14T00:00:00Z"
                    close: "1.1707956727391936"
                    close_timestamp: "2018-05-24T00:00:00Z"
            text/csv:
              schema:
                type: string
              example: "EUR,1.1934028689404969,05/14/2018 00:00:00,1.1707956727391936,05/24/2018 00:00:00"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /exchange-rates/history:
    get:
      summary: Exchange Rates History
      operationId: getExchangeRatesHistory
      description: |
        Exchange rates for every point in a time range. This endpoint can be used with other interval endpoints
        to convert values into a desired quote currency.

        The currency parameter must be a Nomics Quote Currency, to get all Nomics Quote Currencies, use the
        `/exchange-rates` endpoint for all current rates.
      parameters:
        - $ref: '#/components/parameters/currency'
        - $ref: '#/components/parameters/interval-start'
        - $ref: '#/components/parameters/interval-end'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      description: RFC3999 timestamp of the rate
                    rate:
                      type: string
                      description: Rate of exchange to USD
                  example:
                    timestamp: "2018-05-01T00:00:00Z"
                    rate: "1.2079045272261680"
            text/csv:
              schema:
                type: string
              example: "05/01/2018 00:00:00,1.2079045272261680"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /trades:
    get:
      summary: Trades
      operationId: getTrades
      description: |
        ### !! This API has not been released to all users.  If you'd like access to this endpoint, please contact cdc@nomics.com and request access.

        The trades endpoint returns individual trades in a normalized format for an individual
        exchange market.

        ### Getting the most recent trades

        By default, the trades endpoint returns the 100 most recent trades in descending order.
        You only need to provide the required parameters.
        
        ### Sequential ingestion
        
        If you want to page through trades sequentially for ingestion, follow these steps:

        1. Get the first page of trades `order=asc`
        2. Get the timestamp of the last trade in the page, let's call it `last`
        3. Get the next page of trades `order=asc&from=<last>`
        4. Repeat 2 and 3

        To reverse chronologically ingest, make a request for the most recent trades, and
        proceed as above but with `order=desc`.

        ### Building your own candles

        If you want to build your own candles, follow the steps for sequential ingestion, but start
        with `from=<start>` in step 1, where `start` is the start of your candle.

        Then, stop when you see a trade past your candle's `end` timestamp, discard trades past
        `end` and perform your aggregation.
      parameters:
        - $ref: '#/components/parameters/exchange'
        - $ref: '#/components/parameters/market'
        - name: limit
          in: query
          description: Maximum number of trades returned
          schema:
            type: integer
            minimum: 1
            maximum: 2500
            default: 100
        - name: order
          in: query
          description: >
            Defines the sort order of returned trades and the direction from `from`.
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
        - name: from
          in: query
          description: >
            Timestamp from which results should start in RFC3339. Please ensure you URI encode the timestamp.
            From is inclusive.
          schema:
            type: string
            example: "1970-01-01T00%3A00%3A00Z"
      responses:
        '200':
          description: List of trades
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Trade"
            text/csv:
              schema:
                type: string
              example: "1,12/01/2014 05:33:56,300.00000000,0.01000000"
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /currencies/highs:
    get:
      summary: All Time Highs
      operationId: getCurrencyHighs
      description: |
        Returns all time high information for all currencies.
      responses:
        '200':
          description: All time highs for all currencies
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    currency:
                      type: string
                      description: Nomics ID of the currency
                    price:
                      type: string
                      description: Highest price of the currency in USD
                    timestamp:
                      type: string
                      description: Timestamp of the high price in RFC3339
                    exchange:
                      type: string
                      description: Exchange ID on which the high occurred
                    quote:
                      type: string
                      description: Quote currency against which the high occurred
                  example:
                    currency: "BTC"
                    price: "24436.29525"
                    timestamp: "2018-01-05T00:00:00Z"
                    exchange: "bithumb"
                    quote: "KRW"
            test/csv:
              schema:
                type: string
              example: "BTC,24436.29525,01/05/2018 00:00:00,bithumb,KRW"
        '401':
           $ref: '#/components/responses/UnauthorizedError'
  /currencies/interval:
    get:
      summary: Currencies Interval
      operationId: getCurrenciesInterval
      description: |
        Open and close prices and volume for all currencies between a customizable time range.
      parameters:
        - $ref: '#/components/parameters/interval-start'
        - $ref: '#/components/parameters/interval-end'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    currency:
                      type: string
                      description: Nomics ID of the currency
                    volume:
                      type: string
                      description: Total volume in USD over the time range
                    open:
                      type: string
                      description: Open price in USD
                    open_timestamp:
                      type: string
                      description: RFC3999 timestamp of the open price
                    close:
                      type: string
                      description: Close price in USD
                    close_timestamp:
                      type: string
                      description: RFC3999 timestamp of the open price
                  example:
                    currency: "BTC"
                    volume: "7039575495.41955"
                    open: "8746.03472"
                    open_timestamp: "2018-05-14T00:00:00Z"
                    close: "7509.12469"
                    close_timestamp: "2018-05-24T00:00:00Z"
            text/csv:
              schema:
                type: string
              example: "BTC,7042240511.06433,8746.03472,05/14/2018 00:00:00,7498.07225,05/24/2018 00:00:00"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /supplies/interval:
    get:
      summary: Supplies Interval
      operationId: getSuppliesInterval
      description: |
        Open and close supply information for all currencies between a customizable time interval.
      parameters:
        - $ref: '#/components/parameters/interval-start'
        - $ref: '#/components/parameters/interval-end'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    currency:
                      type: string
                      description: Nomics ID of the currency
                    open_available:
                      type: string
                      description: Open available supply
                    open_max:
                      type: string
                      description: Open max supply
                    open_timestamp:
                      type: string
                      description: RFC3999 timestamp of the open supply information
                    close_available:
                      type: string
                      description: Close available supply
                    close_max:
                      type: string
                      description: Close max supply
                    close_timestamp:
                      type: string
                      description: RFC3999 timestamp of the close supply information
                  example:
                    currency: "BTC"
                    open_available: "17032187.0"
                    open_max: "21000000.0"
                    open_timestamp: "2018-05-14T00:04:31Z"
                    close_available: "17052037.0"
                    close_max: "21000000.0"
                    close_timestamp: "2018-05-24T14:19:34Z"
            text/csv:
              schema:
                type: string
              example: "BTC,17032187.0,21000000.0,05/14/2018 00:04:31,17052037.0,21000000.0,05/24/2018 14:19:34"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
components:
  securitySchemes:
    Key:
      type: apiKey
      in: query
      name: key
      description: |
        You can include your API Key as the parameter `key` in any request.
  schemas:
    Market:
      type: object
      properties:
        exchange:
          type: string
          description: Nomics Exchange ID
        market:
          type: string
          description: The Exchange's Market ID (usable on Exchange's API)
        base:
          type: string
          description: Nomics Currency ID of the asset being traded
        quote:
          type: string
          description: Nomics Currency ID of the asset used to quote a price
      example:
        exchange: bitfinex
        market: avtbtc
        base: AVT
        quote: BTC
    MarketInterval:
      type: object
      properties:
        exchange:
          type: string
          description: Nomics Exchange ID
        quote:
          type: string
          description: Nomics Currency ID of the asset used to quote a price
        volume:
          type: string
          description: Total volume in USD
        open:
          type: string
          description: Open price in USD
        open_timestamp:
          type: string
          description: Timestamp of the open price in RFC 3339
        close:
          type: string
          description: Close price in USD
        close_timestamp:
          type: string
          description: Timestamp of the close price in RFC 3339
      example:
        exchange: "bitfinex"
        quote: "EUR"
        volume: "4986395.59716"
        open: "9484.34395"
        open_timestamp: "2018-05-03T15:00:00Z"
        close: "9671.60953"
        close_timestamp: "2018-05-03T20:31:24.737Z"
    Price:
      type: object
      properties:
        currency:
          type: string
          description: Currency ID
        price:
          type: string
          description: Price in quote currency
      example:
        currency: BTC
        price: "10000.00000"
    Candle:
      type: object
      properties:
        timestamp:
          type: string
          description: Start time of the candle in RFC3339
        low:
          type: string
          description: Lowest price in quote currency
        open:
          type: string
          description: First trade price in quote currency
        close:
          type: string
          description: Last trade price in quote currency
        high:
          type: string
          description: Highest price in quote currency
        volume:
          type: string
          description: Volume in base currency
      example:
        timestamp: "2018-03-19T10:00:00Z"
        low: "7024.32225"
        open: "8276.19407"
        close: "8281.17307"
        high: "8566.43000"
        volume: "59624801"
    Dashboard:
      type: object
      properties:
        currency:
          type: string
          description: Currency ID
        dayOpen:
          type: string
          description: Price one day ago
        dayVolume:
          type: string
          description: Volume over the past day
        dayOpenVolume:
          type: string
          description: Volume over the previous day
        weekOpen:
          type: string
          description: Price one week ago
        weekVolume:
          type: string
          description: Volume over the past week
        weekOpenVolume:
          type: string
          description: Volume over the previous week
        monthOpen:
          type: string
          description: Price one month ago
        monthVolume:
          type: string
          description: Volume over the past 30 days
        monthOpenVolume:
          type: string
          description: Volume over the previous 30 days
        yearOpen:
          type: string
          description: Price one year ago
        yearVolume:
          type: string
          description: Volume over the past year
        yearOpenVolume:
          type: string
          description: Volume over the previous year
        close:
          type: string
          description: Current price
        high:
          type: string
          description: Highest price
        highTimestamp:
          type: string
          description: Timestamp of the highest price in RFC3339
        highExchange:
          type: string
          description: Exchange on which the highest price occurred
        highQuoteCurrency:
          type: string
          description: Quote currency against which highest price was recorded
        availableSupply:
          type: string
          description: Circulating supply
        maxSupply:
          type: string
          description: Maximum supply
      example:
        currency: "BTC"
        dayOpen: "7436.82313"
        dayVolume: "1017039454.62165"
        dayOpenVolume: "1013499101.75834"
        weekOpen: "7123.20591"
        weekVolume: "7856259697.70049"
        weekOpenVolume: "7139283718.53940"
        monthOpen: "10769.08245"
        monthVolume: "41483988434.15605"
        monthOpenVolume: "50120582053.23234"
        yearOpen: "1144.85801"
        yearVolume: "385101925394.80138"
        yearOpenVolume: "16773015388.14144"
        close: "6888.45685"
        high: "24436.29525"
        highTimestamp: "2018-01-05T00:00:00Z"
        highExchange: "bithumb"
        highQuoteCurrency: "KRW"
        availableSupply: "16957550.0"
        maxSupply: "21000000.0"
    SparklineRow:
      type: object
      properties:
        currency:
          type: string
          description: Currency ID
          example: BTC
        timestamps:
          type: array
          description: Time values matching the close values
          items:
            type: string
            description: Timestamp of the start of the candle in RFC3339
            example: "2018-04-03T16:00:00Z"
        closes:
          type: array
          description: Closing price in USD corresponding to timestamp value
          items:
            type: string
            description: Price in USD
            example: "7436.82313"
    MarketCapSparklineRow:
      type: object
      properties:
        currency:
          type: string
          description: Currency ID
          example: MarketCap
        timestamps:
          type: array
          description: Time values matching the close values
          items:
            type: string
            description: Timestamp of the start of the candle in RFC3339
            example: "2018-04-03T16:00:00Z"
        closes:
          type: array
          description: Closing market cap in USD corresponding to timestamp value
          items:
            type: string
            description: Market Cap in USD
            example: "7436.82313"
    ExchangeRate:
      type: object
      properties:
        currency:
          type: string
          description: Currency ID
          example: AUD
        rate:
          type: string
          description: Exchange rate to USD (Currency * Rate = USD)
          example: "0.76953"
        timestamp:
          type: string
          description: Timestamp this rate was updated at in RFC3339
          example: "2018-04-04T00:00:00Z"
    Trade:
      type: object
      properties:
        id:
          type: string
          description: Exchange's ID of the trade (or synthetic ID when not available)
          example: "3608432558"
        timestamp:
          type: string
          description: Timestamp in RFC3339
          example: "2014-12-01T05:33:56.761199Z"
        price:
          type: string
          description: Price of the trade in the quote currency of the market
          example: "9271.73"
        volume:
          type: string
          description: Volume of the trade in the base currency of the market
          example: "0.02122885"
  parameters:
    candle-interval:
      name: interval
      in: query
      description: Time interval of the candle
      required: true
      schema:
        type: string
        enum:
          - 1d
          - 1h
    exchange-candle-interval:
      name: interval
      in: query
      description: Time interval of the candle
      required: true
      schema:
        type: string
        enum:
          - 1d
          - 1h
          - 30m
          - 5m
          - 1m
    currency:
      name: currency
      in: query
      description: Currency ID
      required: true
      schema:
        type: string
      example: BTC
    exchange:
      name: exchange
      in: query
      description: Exchange ID
      required: true
      schema:
        type: string
      example: bitfinex
    market:
      name: market
      in: query
      description: Market ID
      required: true
      schema:
        type: string
      example: avtbtc
    interval-start:
      name: start
      in: query
      description: Start time of the interval in RFC3339 (URI escaped)
      required: true
      schema:
        type: string
      example: "2018-05-14T00%3A00%3A00Z"
    interval-end:
      name: end
      in: query
      description: |
        End time of the interval in RFC3339 (URI escaped). If not provided,
        the current time is used.
      required: false
      schema:
        type: string
      example: "2018-05-14T00%3A00%3A00Z"
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid

security:
  - Key: []
